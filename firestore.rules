rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function for authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    // Items: Public read, TEMPORARILY PUBLIC CREATE for diagnostics,
    // and only the seller can update/delete their own items.
    match /items/{itemId} {
      allow read: if true;
      allow create: if true; // WARNING: INSECURE - FOR DIAGNOSTICS ONLY
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.sellerId;

      // Subcollection for item views
      match /views/{viewId} {
        allow read: if true;
        allow create: if true; // Anyone can log a view
        allow update, delete: if false;
      }
    }

    // Users: Public read of profiles. Users can only create their own profile document
    // and can only update their own profile.
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if false;
    }

    // Reviews: Public read. Authenticated users can create reviews.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.reviewerId;
    }

    // MessageThreads: Users can read/write threads they are participants in.
    match /messageThreads/{threadId} {
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
      allow create: if isAuthenticated() && request.auth.uid in request.resource.data.participantIds;

      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[0] == request.auth.uid
                        || get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[1] == request.auth.uid;
        allow create: if isAuthenticated() && request.resource.data.senderId == request.auth.uid
                      && (get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[0] == request.auth.uid
                          || get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[1] == request.auth.uid);
      }
    }

    // UserFavorites: Users can only manage their own favorites.
    match /userFavorites/{favoriteId} {
      allow read, create, delete: if isAuthenticated() && request.auth.uid == favoriteId.split('_')[0];
      allow update: if false;
    }
  }
}
