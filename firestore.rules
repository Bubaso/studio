
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users Collection: Public read, owner-only write.
    match /users/{userId} {
      allow read: if true;
      allow create, update: if request.auth.uid == userId;
    }
    
    // Items Collection: Public read, authenticated write, owner-only update/delete.
    match /items/{itemId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.sellerId;

      // Subcollection for views
      match /views/{viewId} {
        allow create: if true; // Anyone can log a view
        allow read, update, delete: if false; // No one should read/modify views directly
      }
    }
    
    // Reviews Collection: Public read, authenticated create.
    match /reviews/{reviewId} {
        allow read: if true;
        // User must be logged in.
        // User cannot review their own item.
        // User must be the reviewer specified in the data.
        allow create: if request.auth.uid != null 
                      && request.auth.uid != request.resource.data.sellerId
                      && request.auth.uid == request.resource.data.reviewerId;
        // No updates or deletes for simplicity.
        allow update, delete: if false;
    }

    // MessageThreads Collection: Only participants can access.
    match /messageThreads/{threadId} {
        allow read, update, delete: if request.auth.uid in resource.data.participantIds;
        // User must be logged in and part of the new thread.
        allow create: if request.auth.uid != null 
                      && request.auth.uid in request.resource.data.participantIds;
        
        // Messages Subcollection
        match /messages/{messageId} {
            allow read, create: if request.auth.uid in get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds;
            // No updates or deletes for simplicity.
            allow update, delete: if false;
        }
    }

    // UserFavorites Collection: Owner-only access.
    // Doc ID is `${userId}_${itemId}`
    match /userFavorites/{favoriteId} {
        allow read, create, delete: if request.auth.uid != null && request.auth.uid == favoriteId.split('_')[0];
        allow update: if false;
    }

    // ProductReports Collection
    match /productReports/{itemId}/reports/{userId} {
        allow read, create: if request.auth.uid == userId;
        allow update, delete: if false;
    }
  }
}
