
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    // Users: Publicly readable, but only the user can write to their own document.
    match /users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Items: Publicly readable. Only authenticated users can create items for themselves.
    // Only the seller can update/delete their item.
    match /items/{itemId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.sellerId;
      allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.sellerId;

      // Views subcollection: anyone can create a view document.
      match /views/{viewId} {
        allow read: if true;
        allow create: if true;
      }
    }

    // Reviews: Publicly readable. Only authenticated users can write reviews, and not for their own items.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.reviewerId && request.auth.uid != request.resource.data.sellerId;
    }

    // Favorites: The collection needs to be queryable to get a count.
    // So, we allow anyone to list the documents.
    // Write access is restricted to the user creating their own favorite document.
    match /userFavorites/{favoriteId} {
      allow read: if true; // Allows the `getDocs` query to work for counting.
      // Assumes favoriteId is in the format 'userId_itemId'
      allow write: if isAuthenticated() && request.auth.uid == favoriteId.split('_')[0];
    }
    
    // Message Threads: Only participants can read or write.
    match /messageThreads/{threadId} {
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participantIds;

      // Messages subcollection: Inherits thread participants' access.
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[1] == request.auth.uid;
      }
    }
    
    // Product Reports: Authenticated users can create reports.
    match /productReports/{productId}/reports/{userId} {
      allow read, create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if false; // Reports are immutable
    }
  }
}
