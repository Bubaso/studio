
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read anyone's profile, but can only write to their own.
    match /users/{userId} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Items: Publicly readable, but only the owner can write/update.
    match /items/{itemId} {
      allow read; // Anyone can read an item's main document.
      allow create: if request.auth != null && request.resource.data.sellerId == request.auth.uid; // Must be authenticated and be the seller.
      allow update: if request.auth != null && resource.data.sellerId == request.auth.uid; // Only seller can update.
      allow delete: if request.auth != null && resource.data.sellerId == request.auth.uid; // Only seller can delete.

      // Subcollection for views. Anyone can log a view, and anyone can list/count them, but no one can read the individual view documents.
      match /views/{viewId} {
        allow list: if true; // Allow counting documents for view count.
        allow get: if false; // Disallow reading specific view documents to protect privacy.
        allow create; // Anyone can create a view document (log a view).
      }
    }

    // Reviews: Anyone can read, but only authenticated users can write a review.
    // Additional logic in Server Action prevents multiple reviews and self-reviews.
    match /reviews/{reviewId} {
      allow read;
      allow create: if request.auth != null;
      // No updates or deletes from client for simplicity.
    }
    
    // Favorites: Users can only manage their own favorites. Composite key `userId_itemId` is used.
    match /userFavorites/{favoriteId} {
        allow read, write, delete: if request.auth != null && request.auth.uid == favoriteId.split('_')[0];
    }
    
    // Message Threads: Only participants can read/write.
    match /messageThreads/{threadId} {
        allow read, update, create: if request.auth != null && request.auth.uid in resource.data.participantIds;
        
        // Messages Subcollection: Only participants can read/write messages in their thread.
        match /messages/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[1] == request.auth.uid;
            allow update: if request.auth != null && get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/messageThreads/$(threadId)).data.participantIds[1] == request.auth.uid;
        }
    }
    
    // Product Reports: Authenticated users can create reports.
    match /productReports/{itemId} {
        // No one needs to read the container document
        allow read: if false;
        
        match /reports/{userId} {
            // A user can only create their own report document.
            allow create: if request.auth != null && request.auth.uid == userId;
            // No one can read or update reports from the client to maintain privacy.
            allow read, update, delete: if false;
        }
    }
  }
}
