rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // PUBLIC ACCESS: Allow anyone to read from the 'items' collection.
    // This is useful for browsing listings without being logged in.
    match /items/{itemId} {
      allow read: if true;
      allow create: if request.auth != null; // Only authenticated users can create items
      allow update, delete: if request.auth.uid == resource.data.sellerId; // Only the seller can update/delete their own item

      // Rules for subcollections of 'items'
      match /views/{viewId} {
        // Allow any authenticated user to create a view record.
        allow create: if request.auth != null;
        // Allow authenticated users to list views (e.g., to get a count).
        allow list: if request.auth != null;
        // Disallow reading/updating/deleting individual view documents directly.
        allow get, update, delete: if false;
      }
    }

    // USER DATA: Users can only manage their own documents.
    match /users/{userId} {
      allow read: if true; // Allow anyone to read user profiles
      allow create: if request.auth.uid == userId; // A user can create their own profile
      allow update: if request.auth.uid == userId; // A user can only update their own profile
      allow delete: if false; // Disallow deleting user profiles for now

      // VIEW HISTORY: A user can only manage their own view history.
      match /viewHistory/{historyId} {
        allow write: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId;
      }
    }
    
    // COLLECTIONS: Users can manage their own favorite collections.
    match /collections/{collectionId} {
      allow get: if request.auth.uid == resource.data.userId;
      allow list: if request.auth != null; // Client must filter by userId
      allow create, update, delete: if request.auth.uid == request.resource.data.userId;

      // Items within a collection
      match /items/{itemId} {
        allow read, write: if get(/databases/$(database)/documents/collections/$(collectionId)).data.userId == request.auth.uid;
      }
    }

    // USER FAVORITES: A user can only manage their own favorites.
    // This collection is being deprecated in favor of 'collections'.
    match /userFavorites/{favoriteId} {
      allow get, write: if request.auth.uid == resource.data.userId;
      allow list: if request.auth != null; // Client must filter by userId
    }
    
    // PRODUCT REPORTS: Authenticated users can report items.
    match /productReports/{itemId} {
       // Allow any authenticated user to create the parent report document if it doesn't exist.
       allow write: if request.auth != null;

        match /reports/{userId} {
            // A user can only create a report with their own ID.
            allow create: if request.auth.uid == userId;
            // No one can read or modify reports once submitted.
            allow read, update, delete: if false;
        }
    }
  }
}
