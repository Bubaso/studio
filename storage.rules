
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // User Avatars: Only authenticated user can write to their own avatar path
    match /avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Item Images: Only authenticated user (seller) can write to their item image path
    match /items/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Chat Attachments: Authenticated users can write to a path scoped by threadId and their userId
    // The {userId} in the path must match the authenticated user's UID.
    match /chatAttachments/{threadId}/{userId}/{fileName} {
      allow read: if true; // For now, allow all authenticated users to read.
                           // This could be restricted further to only participants of the thread
                           // by checking Firestore data, which is more complex.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Fallback: Deny all other writes by default if not matched above
    match /{allPaths=**} {
      allow read: if false; // Or specific public read rules if any
      allow write: if false;
    }
  }
}
