
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // User avatars: Users can read anyone's avatar.
    // They can only write (create, update, delete) their own avatar.
    // The path includes the user's UID.
    match /avatars/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Item images: Anyone can read. Only the authenticated owner of the item can write.
    // The path includes the seller's UID.
    match /itemImages/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Item videos: Same rules as item images.
    match /itemVideos/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Chat attachments: Only participants of a thread can read/write.
    // The path contains the threadId, which is composed of two user UIDs.
    match /chatAttachments/{threadId}/{userId}/{fileName} {
        // A user can read an attachment if their UID is part of the threadId.
        allow read: if request.auth != null && request.auth.uid in threadId.split('_');
        // A user can write an attachment if their UID is part of the threadId AND their UID matches the userId in the path.
        allow write: if request.auth != null && request.auth.uid in threadId.split('_') && request.auth.uid == userId;
    }
  }
}
